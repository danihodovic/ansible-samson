---
- name: Create stage
  hosts: molecule-samson
  tasks:
    - name: Create a random permalink to not clash with other tests
      set_fact:
        permalink: '{{ 99999999 | random | to_uuid }}'

    - name: Create an environment
      register: create_result
      samson_environment: &create_params
        url: http://localhost:9080
        token: token
        permalink: '{{ permalink }}'
        name: 'my great environment {{ permalink }}'
        production: true

    - name: Assert that the task was executed correctly
      assert:
        that:
          - create_result.changed == true
          - create_result.environment.permalink == permalink
          - create_result.environment.name == 'my great environment {{ permalink }}'
          - create_result.environment.production == true
          - create_result.environment.id is defined

    - name: Create anther environment with the same name
      register: same_name_result
      failed_when: same_name_result is not failed
      samson_environment:
        <<: *create_params
        name: 'my great environment {{ permalink }}'
        permalink: '{{ 8 | random | to_uuid }}'

    - name: Assert the error message
      assert:
        that:
          - same_name_result.msg == 'Name has already been taken'

    - name: Update the environment
      register: update_result
      samson_environment: &update_params
        url: http://localhost:9080
        token: token
        permalink: '{{ permalink }}'
        name: 'renamed {{ permalink }}'
        production: false

    - name: Assert that the task was executed correctly
      assert:
        that:
          - update_result.changed == true
          - update_result.environment.permalink == permalink
          - update_result.environment.name == 'renamed {{ permalink }}'
          - update_result.environment.production == false

    - name: Update the environment again
      register: update_again_result
      samson_environment:
        <<: *update_params

    - name: Assert that nothing is changed
      assert:
        that:
          - update_again_result.changed == false

    - name: Delete
      register: delete_result
      samson_environment:
        <<: *create_params
        state: absent

    - name: Assert that the deletion returned a changed task
      assert:
        that:
          - delete_result is changed

    - name: Delete again
      register: delete_again_result
      samson_environment:
        <<: *create_params
        state: absent

    - name: Assert that nothing was changed
      assert:
        that:
          - delete_again_result is not changed
